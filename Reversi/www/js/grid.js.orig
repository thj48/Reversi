$(document).ready(function() { 
	
	"use strict";
    var isPlayingAgainstComputer = true;
    var isAtMainMenu = true;
	
	var game = new Game();
    game.start();
    
	var GRID_NAMESPACE = GRID_NAMESPACE || {};

	GRID_NAMESPACE.handleClick = function () { //called every time a click on the screen is made.
		game.takeATurn($(this).attr("id"));
	};
    
    GRID_NAMESPACE.startNewGame = function() {
        GRID_NAMESPACE.resetBoard();
        game.startNewGame(isPlayingAgainstComputer); //todo: pass in whether or not playing against a computer.      
        GRID_NAMESPACE.switchBetweenMainMenuAndGame();
        
        var returnToGameButton = document.getElementById("returnToGameButton");
        returnToGameButton.style.display = 'block'; 
    };
    
    GRID_NAMESPACE.togglePlayer2AsComputerOrHuman = function() {
        if(isPlayingAgainstComputer) {
            // make the button text say so       
            var toggleButton = document.getElementById("toggleForHumanOrComputerButton");
            //toggleButton.value = "Human";
            toggleButton.src = "images/twoplayerblue.png";
            isPlayingAgainstComputer = false;
            
        } else {
            // make the button text say so
            var toggleButton = document.getElementById("toggleForHumanOrComputerButton");
            //toggleButton.value = "Computer";
            toggleButton.src = "images/singleplayerblue.png";
            isPlayingAgainstComputer = true;        
        }       
    };
    
    GRID_NAMESPACE.startProgramAtMainMenu = function() {
        var gridDev = document.getElementById("gameplay");
        gridDev.style.display = 'none';
        
        var returnToGameButton = document.getElementById("returnToGameButton");
        returnToGameButton.style.display = 'none';  
    };
    
    GRID_NAMESPACE.switchBetweenMainMenuAndGame = function () {        
        if(isAtMainMenu) {
            //disable main menu div
            var mainmenu = document.getElementById("mainmenu");
            mainmenu.style.display = 'none';
            isAtMainMenu = false;
            
            //endable the game board div
            var gridDev = document.getElementById("gameplay");
            gridDev.style.display = 'block';            
            
        } else {
            //enable main menu div
            var mainmenu = document.getElementById("mainmenu");
            mainmenu.style.display = 'block';
            isAtMainMenu = true;
            
            //disable the game board div
            var gridDev = document.getElementById("gameplay");
            gridDev.style.display = 'none';             
        }        
    };
	
	GRID_NAMESPACE.resetBoard = function() {
		for (var i = 0; i <= 63; i++) {
			var id = "#" + i;
			
			//var playerSymbol = " ";
            
            $(id + ' img').last().remove();
            //Terry, put the img code in the line below in the append to populate each
            //square with the "blank" image at the beginning of each game.
			$(id).append(" "); //<img src= 'images/blanksquare.png' width='25' height='25'>
			
            //ignore this commented out line below
            //$(id).text(playerSymbol);
		}
	};
    
    GRID_NAMESPACE.handlePlayerOnePointUpdate = function() {
        var values = [].slice.call(arguments, 1);
        var points = values[0];
        
        $("#playerOnePoints").text(points);
    }
    
    GRID_NAMESPACE.handlePlayerTwoPointUpdate = function() {
        var values = [].slice.call(arguments, 1);
        var points = values[0];
        
        $("#playerTwoPoints").text(points);
    }
    
    GRID_NAMESPACE.handleResetScoreFields = function() {
        $("#playerOnePoints").text("2");
        $("#playerTwoPoints").text("2");
    }
	
	GRID_NAMESPACE.handleCellClickedEvent = function () {
		var values = [].slice.call(arguments, 1);
		var id = "#" + values[0];//which box it is.
        
        $(id + ' img').last().remove();
		
		var playerSymbol = values[1];//the value to put in the box.
		if(playerSymbol == "X"){
            
            $(id).append("<img src= 'images/player1SileyFace.png' width='25' height='25'>"); //http://i62.tinypic.com/6fnime.png
        }else{
            $(id).append("<img src= 'images/player2ComputerSileyFace.png' width='25' height='25'>"); //http://i59.tinypic.com/2eowiu0.png "<img src= '../images/snail.jpg' width='30' height='23'>"
        }
	};
    
    


	GRID_NAMESPACE.addClickHandlers = function () {
		$("td").click(function() {
			GRID_NAMESPACE.handleClick.call(this);
		});
        
        $("#toggleForHumanOrComputerButton").click(function() {
            GRID_NAMESPACE.togglePlayer2AsComputerOrHuman();
        });
        
        $("#startGameButton").click(function() {
            GRID_NAMESPACE.startNewGame();
        });
        
        $(".toggleMainMenuAndGameButton").click(function() {
            GRID_NAMESPACE.switchBetweenMainMenuAndGame.call();
        });
	};
	
	GRID_NAMESPACE.data = {
			grid : [[0, 1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15], [16, 17, 18, 19, 20, 21, 22, 23], [24, 25, 26, 27, 28, 29, 30, 31], [32, 33, 34, 35, 36, 37, 38, 39], 
                    [40, 41, 42, 43, 44, 45, 46, 47], [48, 49, 50, 51, 52, 53, 54, 55], [56, 57, 58, 59, 60, 61, 62, 63, 64]]
	};
	
	// IIFE to compile the template and build the grid 
	(function() {
		var source = $("#grid-template").html();
		var template = Handlebars.compile(source);
		
		$("#grid").html(template(GRID_NAMESPACE.data));
        
        GRID_NAMESPACE.startProgramAtMainMenu();
	}) ();
    
	$.subscribe('cellClickedEvent', GRID_NAMESPACE.handleCellClickedEvent);
	$.subscribe('resetBoardEvent', GRID_NAMESPACE.resetBoard);
    $.subscribe('playerOnePointUpdateEvent', GRID_NAMESPACE.handlePlayerOnePointUpdate)
    $.subscribe('playerTwoPointUpdateEvent', GRID_NAMESPACE.handlePlayerTwoPointUpdate)
    $.subscribe('resetScoreFieldsEvent', GRID_NAMESPACE.handleResetScoreFields)
	GRID_NAMESPACE.addClickHandlers();
    
	
    
    
	
	
});
